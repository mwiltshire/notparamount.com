import React from 'react';
import { css } from '@emotion/core';
import { motion, AnimatePresence, useCycle } from 'framer-motion';
import { useTheme } from 'emotion-theming';
import { useScroll } from '../hooks';
import NavButton from './nav-button';
import { Theme } from './layout';

const navItems = ['Services', 'Gear', 'About', 'Contact'];

const backgroundVariants = {
  open: {
    clipPath: 'circle(2000px at 100% 100%)',
    transition: {
      type: 'spring',
      stiffness: 50,
      restDelta: 2,
      damping: 40
    }
  },
  closed: {
    clipPath: 'circle(0px at 100% 0px)',
    transition: {
      delay: 0.3,
      type: 'spring',
      stiffness: 400,
      damping: 40
    }
  }
};

const navListVariants = {
  open: {
    transition: { staggerChildren: 0.07, delayChildren: 0.2 }
  },
  closed: {
    transition: { staggerChildren: 0.05, staggerDirection: -1 }
  }
};

const navItemVariants = {
  open: {
    y: 0,
    opacity: 1,
    transition: {
      y: { stiffness: 1000, velocity: -100 }
    }
  },
  closed: {
    y: 50,
    opacity: 0,
    transition: {
      y: { stiffness: 1000 }
    }
  }
};

const Header = () => {
  const [isOpen, toggleOpen] = useCycle(false, true);
  const theme = useTheme<Theme>();
  const scrollTo = useScroll({ offset: -48, delay: 400 });
  return (
    <header
      css={css`
        position: fixed;
        top: 0;
        right: 0;
        width: 100%;
        height: 3rem;
        background: ${theme.colors.white};
        z-index: 1;
      `}
    >
      <nav
        css={css`
          display: flex;
          align-items: center;
          justify-content: space-between;
          margin: 0 15px;
          height: 100%;
          & > svg {
            z-index: 2;
          }
        `}
      >
        <svg
          viewBox="0 0 193 28"
          css={css`
            height: 1.5rem;
          `}
        >
          <path
            xmlns="http://www.w3.org/2000/svg"
            d="M76.344 23H73.208L69.032 16.696V23H65.896V11.72H69.032L73.208 18.104V11.72H76.344V23ZM82.3064 23.112C81.4104 23.112 80.605 22.9253 79.8904 22.552C79.1864 22.1787 78.6317 21.6453 78.2264 20.952C77.821 20.2587 77.6184 19.4427 77.6184 18.504C77.6184 17.576 77.821 16.7653 78.2264 16.072C78.6424 15.3787 79.2024 14.8453 79.9064 14.472C80.621 14.0987 81.4264 13.912 82.3224 13.912C83.2184 13.912 84.0184 14.0987 84.7224 14.472C85.437 14.8453 85.997 15.3787 86.4024 16.072C86.8184 16.7653 87.0264 17.576 87.0264 18.504C87.0264 19.432 86.8184 20.248 86.4024 20.952C85.997 21.6453 85.437 22.1787 84.7224 22.552C84.0077 22.9253 83.2024 23.112 82.3064 23.112ZM82.3064 20.392C82.7437 20.392 83.1064 20.232 83.3944 19.912C83.693 19.5813 83.8424 19.112 83.8424 18.504C83.8424 17.896 83.693 17.432 83.3944 17.112C83.1064 16.792 82.749 16.632 82.3224 16.632C81.8957 16.632 81.5384 16.792 81.2504 17.112C80.9624 17.432 80.8184 17.896 80.8184 18.504C80.8184 19.1227 80.957 19.592 81.2344 19.912C81.5117 20.232 81.869 20.392 82.3064 20.392ZM93.5983 20.328V23H92.2383C89.9449 23 88.7983 21.864 88.7983 19.592V16.632H87.6943V14.024H88.7983V11.848H91.9503V14.024H93.5823V16.632H91.9503V19.64C91.9503 19.8853 92.0036 20.0613 92.1102 20.168C92.2276 20.2747 92.4196 20.328 92.6863 20.328H93.5983ZM107.011 15.48C107.011 16.1627 106.851 16.7867 106.531 17.352C106.222 17.9067 105.747 18.3547 105.107 18.696C104.478 19.0267 103.704 19.192 102.787 19.192H101.235V23H98.0991V11.72H102.787C103.694 11.72 104.462 11.88 105.091 12.2C105.731 12.52 106.211 12.9627 106.531 13.528C106.851 14.0933 107.011 14.744 107.011 15.48ZM102.483 16.696C103.368 16.696 103.811 16.2907 103.811 15.48C103.811 14.6587 103.368 14.248 102.483 14.248H101.235V16.696H102.483ZM107.759 18.504C107.759 17.576 107.924 16.7653 108.255 16.072C108.596 15.3787 109.055 14.8453 109.631 14.472C110.218 14.0987 110.868 13.912 111.583 13.912C112.202 13.912 112.735 14.0347 113.183 14.28C113.631 14.5253 113.978 14.856 114.223 15.272V14.024H117.359V23H114.223V21.752C113.978 22.168 113.626 22.4987 113.167 22.744C112.719 22.9893 112.191 23.112 111.583 23.112C110.868 23.112 110.218 22.9253 109.631 22.552C109.055 22.1787 108.596 21.6453 108.255 20.952C107.924 20.248 107.759 19.432 107.759 18.504ZM114.223 18.504C114.223 17.928 114.063 17.4747 113.743 17.144C113.434 16.8133 113.05 16.648 112.591 16.648C112.122 16.648 111.732 16.8133 111.423 17.144C111.114 17.464 110.959 17.9173 110.959 18.504C110.959 19.08 111.114 19.5387 111.423 19.88C111.732 20.2107 112.122 20.376 112.591 20.376C113.05 20.376 113.434 20.2107 113.743 19.88C114.063 19.5493 114.223 19.0907 114.223 18.504ZM122.282 15.608C122.634 15.096 123.061 14.6907 123.562 14.392C124.063 14.0933 124.602 13.944 125.178 13.944V17.288H124.298C123.615 17.288 123.109 17.4213 122.778 17.688C122.447 17.9547 122.282 18.4187 122.282 19.08V23H119.146V14.024H122.282V15.608ZM125.79 18.504C125.79 17.576 125.956 16.7653 126.286 16.072C126.628 15.3787 127.086 14.8453 127.662 14.472C128.249 14.0987 128.9 13.912 129.614 13.912C130.233 13.912 130.766 14.0347 131.214 14.28C131.662 14.5253 132.009 14.856 132.254 15.272V14.024H135.39V23H132.254V21.752C132.009 22.168 131.657 22.4987 131.198 22.744C130.75 22.9893 130.222 23.112 129.614 23.112C128.9 23.112 128.249 22.9253 127.662 22.552C127.086 22.1787 126.628 21.6453 126.286 20.952C125.956 20.248 125.79 19.432 125.79 18.504ZM132.254 18.504C132.254 17.928 132.094 17.4747 131.774 17.144C131.465 16.8133 131.081 16.648 130.622 16.648C130.153 16.648 129.764 16.8133 129.454 17.144C129.145 17.464 128.99 17.9173 128.99 18.504C128.99 19.08 129.145 19.5387 129.454 19.88C129.764 20.2107 130.153 20.376 130.622 20.376C131.081 20.376 131.465 20.2107 131.774 19.88C132.094 19.5493 132.254 19.0907 132.254 18.504ZM148.905 13.944C150.036 13.944 150.921 14.2853 151.561 14.968C152.212 15.6507 152.537 16.584 152.537 17.768V23H149.401V18.184C149.401 17.704 149.268 17.3307 149.001 17.064C148.735 16.7973 148.372 16.664 147.913 16.664C147.455 16.664 147.092 16.7973 146.825 17.064C146.559 17.3307 146.425 17.704 146.425 18.184V23H143.289V18.184C143.289 17.704 143.156 17.3307 142.889 17.064C142.633 16.7973 142.276 16.664 141.817 16.664C141.348 16.664 140.98 16.7973 140.713 17.064C140.447 17.3307 140.313 17.704 140.313 18.184V23H137.177V14.024H140.313V15.208C140.591 14.824 140.948 14.52 141.385 14.296C141.833 14.0613 142.345 13.944 142.921 13.944C143.583 13.944 144.169 14.088 144.681 14.376C145.204 14.664 145.615 15.0693 145.913 15.592C146.233 15.1013 146.655 14.7067 147.177 14.408C147.7 14.0987 148.276 13.944 148.905 13.944ZM158.431 23.112C157.535 23.112 156.73 22.9253 156.015 22.552C155.311 22.1787 154.757 21.6453 154.351 20.952C153.946 20.2587 153.743 19.4427 153.743 18.504C153.743 17.576 153.946 16.7653 154.351 16.072C154.767 15.3787 155.327 14.8453 156.031 14.472C156.746 14.0987 157.551 13.912 158.447 13.912C159.343 13.912 160.143 14.0987 160.847 14.472C161.562 14.8453 162.122 15.3787 162.527 16.072C162.943 16.7653 163.151 17.576 163.151 18.504C163.151 19.432 162.943 20.248 162.527 20.952C162.122 21.6453 161.562 22.1787 160.847 22.552C160.133 22.9253 159.327 23.112 158.431 23.112ZM158.431 20.392C158.869 20.392 159.231 20.232 159.519 19.912C159.818 19.5813 159.967 19.112 159.967 18.504C159.967 17.896 159.818 17.432 159.519 17.112C159.231 16.792 158.874 16.632 158.447 16.632C158.021 16.632 157.663 16.792 157.375 17.112C157.087 17.432 156.943 17.896 156.943 18.504C156.943 19.1227 157.082 19.592 157.359 19.912C157.637 20.232 157.994 20.392 158.431 20.392ZM173.611 14.024V23H170.459V21.72C170.193 22.1253 169.825 22.456 169.355 22.712C168.886 22.9573 168.347 23.08 167.739 23.08C166.694 23.08 165.867 22.7387 165.259 22.056C164.662 21.3627 164.363 20.424 164.363 19.24V14.024H167.483V18.84C167.483 19.352 167.617 19.7573 167.883 20.056C168.161 20.344 168.523 20.488 168.971 20.488C169.43 20.488 169.793 20.344 170.059 20.056C170.326 19.7573 170.459 19.352 170.459 18.84V14.024H173.611ZM181.268 13.944C182.303 13.944 183.124 14.2907 183.732 14.984C184.34 15.6667 184.644 16.5947 184.644 17.768V23H181.508V18.184C181.508 17.672 181.375 17.272 181.108 16.984C180.841 16.6853 180.484 16.536 180.036 16.536C179.567 16.536 179.199 16.6853 178.932 16.984C178.665 17.272 178.532 17.672 178.532 18.184V23H175.396V14.024H178.532V15.304C178.809 14.8987 179.183 14.5733 179.652 14.328C180.121 14.072 180.66 13.944 181.268 13.944ZM191.661 20.328V23H190.301C188.007 23 186.861 21.864 186.861 19.592V16.632H185.757V14.024H186.861V11.848H190.013V14.024H191.645V16.632H190.013V19.64C190.013 19.8853 190.066 20.0613 190.173 20.168C190.29 20.2747 190.482 20.328 190.749 20.328H191.661Z"
            fill={`${theme.colors.black}`}
          />
          <path
            xmlns="http://www.w3.org/2000/svg"
            d="M10 15.087L1 28H55L43 6.28261L37 10.9783L29.5 1L15 20.9565L10 15.087Z"
            fill={`${theme.colors.black}`}
            stroke={`${theme.colors.black}`}
          />
        </svg>

        <AnimatePresence>
          {isOpen && (
            <motion.div
              variants={backgroundVariants}
              initial="closed"
              animate="open"
              exit="closed"
              css={css`
                position: absolute;
                display: flex;
                align-items: center;
                justify-content: center;
                top: 0;
                left: 0;
                height: 100vh;
                width: 100vw;
                background: ${theme.colors.turqoise};
                z-index: 1;
                & + button {
                  z-index: 2;
                }
              `}
            >
              <motion.ul
                variants={navListVariants}
                css={css`
                  margin: 0;
                  & li {
                    list-style: none;
                    font-size: ${theme.fontSizes['4xl']};
                    font-weight: ${theme.fontWeights.bold};
                  }
                `}
              >
                {navItems.map(item => (
                  <motion.li variants={navItemVariants} key={item}>
                    <a
                      onClick={e => {
                        e.preventDefault();
                        toggleOpen();
                        scrollTo(`#${item.toLowerCase()}`);
                      }}
                      href={`#${item.toLowerCase()}`}
                      css={css`
                        position: relative;
                        text-decoration: none;
                        color: inherit;
                        &:after {
                          content: '';
                          position: absolute;
                          left: 0;
                          bottom: -3px;
                          width: 100%;
                          height: 6px;
                          background: currentColor;
                        }
                        &:visited {
                          color: inherit;
                        }
                      `}
                    >
                      {item}
                    </a>
                  </motion.li>
                ))}
              </motion.ul>
            </motion.div>
          )}
        </AnimatePresence>
        <NavButton isClicked={isOpen} onClick={toggleOpen} />
      </nav>
    </header>
  );
};

export default Header;
